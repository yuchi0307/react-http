{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","components/NewTask/NewTask.js","components/hooks/use-http.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","NewTask","useState","isLoading","setIsLoading","setError","enterTaskHandler","taskText","a","fetch","method","body","JSON","stringify","headers","response","ok","Error","json","data","generatedId","name","createdTask","onAddTask","message","useHttp","sendRequest","requestConfig","applyData","url","header","App","tasks","setTasks","taskObj","loadedTasks","taskKey","push","fetchTasks","useEffect","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d800041.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QN43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1rhm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2nBq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__31W-N\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState } from 'react';\n\nimport Section from '../UI/Section';\nimport TaskForm from './TaskForm';\n\nconst NewTask = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        'https://tasks-44545-default-rtdb.firebaseio.com/tasks.json',\n        {\n          method: 'POST',\n          body: JSON.stringify({ text: taskText }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import{useState} from 'react';\n\nconst useHttp = () =>{\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (requestConfig, applyData) => {\n      //把發送 request 的要素包成物件 requestConfig 進來這個hook\n      //applyData 則為function，用以處理 server 回傳的資料\n    setIsLoading(true);\n    setError(null);\n    try { const response = await fetch(requestConfig.url, {\n            method: requestConfig.method ? requestConfig.method : 'GET',\n            headers: requestConfig.header ? requestConfig.header : {},\n            body: requestConfig.body ? JSON.stringify(requestConfig.body) : null \n        });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n      \n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  };\n  //custom hook可以回傳任一型態的資料\n  return{\n    isLoading: isLoading, //左邊為attribute, 右邊為值\n    error: error,\n    sendRequest: sendRequest //回傳整個function\n  }\n  /*\n  in modern js can write as below:\n  return{\n      isLoading,\n      error,\n      sendRequest\n  } */\n}\n\nexport default useHttp;","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './components/hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n //將傳入costum hook的第二個參數作為一個變數如下行：\n  const transformTask = taskObj => { //從firebase拿來的資料，轉為前端需要的樣子\n    const loadedTasks = [];\n\n      for (const taskKey in taskObj) {\n        loadedTasks.push({ id: taskKey, text: taskObj[taskKey].text },);\n      }\n\n      setTasks(loadedTasks);\n\n  }\n  //useHttp回傳的物件放在這，將sendRequest轉名為fetchTasks\n  const {isLoading, error, sendRequest: fetchTasks} = useHttp(\n    { url: 'https://tasks-44545-default-rtdb.firebaseio.com/task.json' },\n    transformTask\n  );\n\n\n  useEffect(() => {\n    fetchTasks();\n    // eslint-disable-next-line\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}