{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","Movie","props","className","classes","movie","title","releaseDate","openingText","MovieList","movies","map","id","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","control","htmlFor","type","ref","rows","App","useState","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","useCallback","a","fetch","response","ok","Error","json","key","data","console","log","loadedMovies","push","message","method","body","JSON","stringify","headers","useEffect","content","length","MoviesList","Fragment","onClick","ReactDOM","render","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,QAAU,4B,oBCA5BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,cAAc,kC,+KCajBC,EAVD,SAACC,GACb,OACE,qBAAIC,UAAWC,IAAQC,MAAvB,UACE,6BAAKH,EAAMI,QACX,6BAAKJ,EAAMK,cACX,4BAAIL,EAAMM,kB,gBCWDC,EAfG,SAACP,GACjB,OACE,oBAAIC,UAAWC,IAAQ,eAAvB,SACGF,EAAMQ,OAAOC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAEEC,MAAOD,EAAMC,MACbC,YAAaF,EAAME,YACnBC,YAAaH,EAAMG,aAHdH,EAAMO,U,gBCgCNC,MAtCf,SAAkBX,GAChB,IAAMY,EAAWC,iBAAO,IAClBC,EAAiBD,iBAAO,IACxBE,EAAiBF,iBAAO,IAgB9B,OACE,uBAAMG,SAfR,SAAuBC,GACrBA,EAAMC,iBAIN,IAAMf,EAAQ,CACZC,MAAOQ,EAASO,QAAQC,MACxBd,YAAaQ,EAAeK,QAAQC,MACpCf,YAAaU,EAAeI,QAAQC,OAGtCpB,EAAMqB,WAAWlB,IAIjB,UACE,sBAAKF,UAAWC,IAAQoB,QAAxB,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOC,KAAK,OAAOd,GAAG,QAAQe,IAAKb,OAErC,sBAAKX,UAAWC,IAAQoB,QAAxB,UACE,uBAAOC,QAAQ,eAAf,0BACA,0BAAUG,KAAK,IAAIhB,GAAG,eAAee,IAAKX,OAE5C,sBAAKb,UAAWC,IAAQoB,QAAxB,UACE,uBAAOC,QAAQ,OAAf,0BACA,uBAAOC,KAAK,OAAOd,GAAG,OAAOe,IAAKV,OAEpC,mD,MC8CSY,MA7Ef,WACE,MAA4BC,mBAAS,IAArC,mBAAOpB,EAAP,KAAeqB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAqBC,sBAAW,sBAAC,kCAAAC,EAAA,6DACrCL,GAAa,GACbE,EAAS,MAF4B,kBAIZI,MAAM,oEAJM,WAI7BC,EAJ6B,QAMrBC,GANqB,sBAO3B,IAAIC,MAAM,yBAPiB,wBAUhBF,EAASG,OAVO,QAanC,IAAUC,KAHJC,EAV6B,OAWnCC,QAAQC,IAAI,iCAAQF,GACdG,EAAe,GACJH,EAEfG,EAAaC,KAAK,CAChBrC,GAAIgC,EACJtC,MAAOuC,EAAKD,GAAKtC,MACjBE,YAAaqC,EAAKD,GAAKpC,YACvBD,YAAasC,EAAKD,GAAKrC,cAG3BwB,EAAUiB,GAtByB,kDAwBnCb,EAAS,KAAMe,SAxBoB,QA0BrCjB,GAAa,GA1BwB,0DA2BpC,IAhCU,4CAsCb,WAA+B5B,GAA/B,iBAAAiC,EAAA,sEACyBC,MAAM,mEAC7B,CACEY,OAAQ,OACRC,KAAMC,KAAKC,UAAUjD,GACrBkD,QAAQ,CAAE,eAAe,sBAL7B,cACQf,EADR,gBAQsBA,EAASG,OAR/B,OAQQE,EARR,OASEC,QAAQC,IAAIF,GATd,4CAtCa,sBAkCbW,qBAAU,WACRpB,MACC,CAACA,IAcJ,IAAIqB,EAAU,iDAcd,OAZI/C,EAAOgD,OAAS,IAClBD,EAAU,cAACE,EAAD,CAAYjD,OAAQA,KAG5BwB,IACFuB,EAAU,4BAAIvB,KAGZF,IACFyB,EAAU,4CAIV,eAAC,IAAMG,SAAP,WACE,kCACE,cAAC,EAAD,CAAUrC,WAnEH,gDAqET,kCACE,wBAAQsC,QAASzB,EAAjB,4BAEF,kCAAUqB,QCxEhBK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.adf83782.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__2ENNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__27rBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__lMnXQ\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.releaseDate}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;","import React, { useRef } from 'react';\n\nimport classes from './AddMovie.module.css';\n\nfunction AddMovie(props) {\n  const titleRef = useRef('');\n  const openingTextRef = useRef('');\n  const releaseDateRef = useRef('');\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    // could add validation here...\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='title'>Title</label>\n        <input type='text' id='title' ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='opening-text'>Opening Text</label>\n        <textarea rows='5' id='opening-text' ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='date'>Release Date</label>\n        <input type='text' id='date' ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;","import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-c58ad-default-rtdb.firebaseio.com/movies.json');\n      \n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n      console.log('讀取資料：',data); //可見回傳的是一個包在底層的物件\n      const loadedMovies = [];\n      for(const key in data)\n      {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-c58ad-default-rtdb.firebaseio.com/movies.json',\n    {\n      method: 'POST',\n      body: JSON.stringify(movie), //將js物件轉為json資料格式傳給server\n      headers:{ 'content-type':'application/json'}\n    }\n    )\n    const data  = await response.json();\n    console.log(data);\n  }\n\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}